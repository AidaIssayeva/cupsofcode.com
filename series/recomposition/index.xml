<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Recomposition on Cups of Code</title><link>https://cupsofcode.com/series/recomposition/</link><description>Recent content in Recomposition on Cups of Code</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright © 2023, Cups of Code</copyright><lastBuildDate>Sun, 28 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://cupsofcode.com/series/recomposition/index.xml" rel="self" type="application/rss+xml"/><item><title>Tools to detect and debug recomposition in Jetpack Compose</title><link>https://cupsofcode.com/post/tools_to_detect_and_debug_recomposition_in_jetpack_compose/</link><pubDate>Sun, 28 Aug 2022 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/tools_to_detect_and_debug_recomposition_in_jetpack_compose/</guid><description>Table Of Contents: What is recomposition Why do you need to be concerned about recomposition? Tools to detect recomposition Final Thoughts This post is extracted from my talk “What does recomposition mean to your app” .
What is recomposition Recomposition is the action of forming something again or differently. When the term is used in Jetpack Compose, it means the action of executing the function again.</description></item></channel></rss>