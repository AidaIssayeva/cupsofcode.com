<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Career on Cups of Code</title><link>https://cupsofcode.com/categories/career/</link><description>Recent content in Career on Cups of Code</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright Â© 2024, Cups of Code</copyright><lastBuildDate>Tue, 23 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://cupsofcode.com/categories/career/index.xml" rel="self" type="application/rss+xml"/><item><title>1 Tip I Would Give Someone Who Wants To Become a Software Engineer</title><link>https://cupsofcode.com/post/day_7_1_tip_i_would_give_someone_who_wants_to_become_a_software_engineer/</link><pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/day_7_1_tip_i_would_give_someone_who_wants_to_become_a_software_engineer/</guid><description>Do you want to get started working in software engineering?
I have been working as a software engineer for 9 years now. And what I can tell you (from experience) is that in order to work in this industry you need to write code, cover unhappy paths and edge cases, and decide on trade-offs, among other things.
So, here&amp;rsquo;s the 1 tip I would give you if you wanted to pursue a similar career path:</description></item><item><title>3 Essential skills that define a software engineer</title><link>https://cupsofcode.com/post/day_2_3_essential_skills_that_define_a_software_engineer/</link><pubDate>Sun, 14 Jul 2024 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/day_2_3_essential_skills_that_define_a_software_engineer/</guid><description>Being able to code doesn&amp;rsquo;t make you a software engineer, although coding is a fundamental skill and a prerequisite for becoming one.
Anyone can write code that compiles and runs thanks to a wide range of IDEs (integrated development environments). Here are three important skills that transform you into a software engineer:
Skill #1: Robustness Writing code that works in ideal conditions is one thing, but ensuring that it operates under various edge cases, unexpected inputs, and adverse conditions is another.</description></item><item><title>The 5-step guide to become an Android Developer</title><link>https://cupsofcode.com/post/the_five_step_guide_to_become_android_developer/</link><pubDate>Wed, 29 Sep 2021 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/the_five_step_guide_to_become_android_developer/</guid><description>Featured in Android Weekly Issue #487. Featured in Dev Weekly Issue #106. So you want to become an Android Developer and don&amp;rsquo;t know where to start?
Here is my 5-step guide to becoming an Android Developer, jam-packed with action items after each step.
Presentation .
Video: Table Of Contents: 1. Learn a Programming Language 2. Learn Android Platform Fundamentals 3.</description></item><item><title>How to get your first interviews as a software engineer</title><link>https://cupsofcode.com/post/how_to_get_first_interviews_as_a_software_engineer/</link><pubDate>Wed, 30 Jun 2021 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/how_to_get_first_interviews_as_a_software_engineer/</guid><description>Finding a job is never easy - finding the first job is a thousand times harder. Getting those automatic rejection emails without having a chance to interview can be an emotional roller-coaster that makes you doubt your skills, abilities, and intentions. This is why striving for visibility is key when trying to land that first job interview.
The greater the number of people who view your resume, the greater the chance of being offered an interview - it&amp;rsquo;s as simple as that.</description></item></channel></rss>