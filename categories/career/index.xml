<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Career on Cups of Code</title><link>https://cupsofcode.com/categories/career/</link><description>Recent content in Career on Cups of Code</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright © 2024, Cups of Code</copyright><lastBuildDate>Mon, 29 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://cupsofcode.com/categories/career/index.xml" rel="self" type="application/rss+xml"/><item><title>One Underrated Tool Tip to Help New Hires Onboard, Ramp up, and Start Excelling Faster in Their New Company</title><link>https://cupsofcode.com/post/day_11_one_underrated_tool_tip_to_help_new_hires_onboard_ramp_up_and_start_exceling_faster_in_their_new_company/</link><pubDate>Mon, 29 Jul 2024 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/day_11_one_underrated_tool_tip_to_help_new_hires_onboard_ramp_up_and_start_exceling_faster_in_their_new_company/</guid><description>Joining a new company is always stressful.
You&amp;rsquo;re faced with the task of learning:
new tools, a new codebase, a new testing infrastructure, new errors, all of which are specific to this company. While onboarding videos and assignments provide a structured introduction, the real process of acclimating to a new environment often extends beyond the official onboarding period. For some, it might even take more than 6 months to feel fully integrated.</description></item><item><title>One Big Mistake I Made When I Was First Getting Started As a Software Engineer</title><link>https://cupsofcode.com/post/day_10_one_big_mistake_i_made_when_i_was_first_getting_started_as_a_software_engineer/</link><pubDate>Fri, 26 Jul 2024 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/day_10_one_big_mistake_i_made_when_i_was_first_getting_started_as_a_software_engineer/</guid><description>Like most beginners, I made a lot of mistakes when I first started working as a software engineer.
But this was the biggest one, by far:
Frequently downplaying my individual contributions Here&amp;rsquo;s what happened:
Whenever colleagues praised my work, my natural response was to shy away from the compliments and attribute the success to the team&amp;rsquo;s collective effort, even though I was the primary driver and deliverer of those projects. This modesty, while fostering a supportive team environment, inadvertently masked my specific contributions from the wider organization.</description></item><item><title>One Effective Strategy for Platform Engineers to Showcase Impact in Promotion Packets</title><link>https://cupsofcode.com/post/day_9_one_effective_strategy_for-platform_engineers_to_showcase_impact_in_promotion_packets/</link><pubDate>Thu, 25 Jul 2024 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/day_9_one_effective_strategy_for-platform_engineers_to_showcase_impact_in_promotion_packets/</guid><description>Promotion reviewers often have limited time to dive deeply into each project in a promotion packet, making it crucial to present information that quickly captures their attention.
The best way to capture their attention is by showing the impact of your work in business terms. This approach involves translating technical achievements into quantifiable business outcomes, such as:
increased revenue, cost savings, improved customer satisfaction. For instance, if a project focused on optimizing and speeding up CI build time, you might calculate the cost savings from the developer hours saved due to the optimization.</description></item><item><title>One Tip Every Junior Software Engineer Needs to Hear to Succeed</title><link>https://cupsofcode.com/post/day_7_1_tip_i_would_give_someone_who_wants_to_become_a_software_engineer/</link><pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/day_7_1_tip_i_would_give_someone_who_wants_to_become_a_software_engineer/</guid><description>Are you a junior software engineer eager to make your mark?
I have been working as a software engineer for 9 years now. And what I can tell you (from experience) is that in order to succeed in this industry you need not only to write code, cover unhappy paths and edge cases, and decide on trade-offs, and other things.
So, here’s the one crucial tip every junior software engineer needs to hear as you advance in your career:</description></item><item><title>3 Essential skills that define a software engineer</title><link>https://cupsofcode.com/post/day_2_3_essential_skills_that_define_a_software_engineer/</link><pubDate>Sun, 14 Jul 2024 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/day_2_3_essential_skills_that_define_a_software_engineer/</guid><description>Being able to code doesn&amp;rsquo;t make you a software engineer, although coding is a fundamental skill and a prerequisite for becoming one.
Anyone can write code that compiles and runs thanks to a wide range of IDEs (integrated development environments). Here are three important skills that transform you into a software engineer:
Skill #1: Robustness Writing code that works in ideal conditions is one thing, but ensuring that it operates under various edge cases, unexpected inputs, and adverse conditions is another.</description></item><item><title>The 5-step guide to become an Android Developer</title><link>https://cupsofcode.com/post/the_five_step_guide_to_become_android_developer/</link><pubDate>Wed, 29 Sep 2021 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/the_five_step_guide_to_become_android_developer/</guid><description>Featured in Android Weekly Issue #487. Featured in Dev Weekly Issue #106. So you want to become an Android Developer and don&amp;rsquo;t know where to start?
Here is my 5-step guide to becoming an Android Developer, jam-packed with action items after each step.
Presentation .
Video: Table Of Contents: 1. Learn a Programming Language 2. Learn Android Platform Fundamentals 3.</description></item><item><title>How to get your first interviews as a software engineer</title><link>https://cupsofcode.com/post/how_to_get_first_interviews_as_a_software_engineer/</link><pubDate>Wed, 30 Jun 2021 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/how_to_get_first_interviews_as_a_software_engineer/</guid><description>Finding a job is never easy - finding the first job is a thousand times harder. Getting those automatic rejection emails without having a chance to interview can be an emotional roller-coaster that makes you doubt your skills, abilities, and intentions. This is why striving for visibility is key when trying to land that first job interview.
The greater the number of people who view your resume, the greater the chance of being offered an interview - it&amp;rsquo;s as simple as that.</description></item></channel></rss>