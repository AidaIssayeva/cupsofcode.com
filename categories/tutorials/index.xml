<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tutorials on Cups of Code</title><link>https://cupsofcode.com/categories/tutorials/</link><description>Recent content in Tutorials on Cups of Code</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright © 2021, Cups of Code</copyright><lastBuildDate>Wed, 08 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://cupsofcode.com/categories/tutorials/index.xml" rel="self" type="application/rss+xml"/><item><title>Story of upgrading Hugo</title><link>https://cupsofcode.com/post/story_of_upgrading_hugo/</link><pubDate>Wed, 08 Sep 2021 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/story_of_upgrading_hugo/</guid><description>After 2 years of using the NewsRoom theme on Hugo, I wanted to switch themes and use something new. With Bootstrap theme as my ideal choice, I decided to nosedive into migrating over until I was faced with my first blocker&amp;hellip; upgrading Hugo to its latest version.
My current Hugo version: 0.61.0
The new theme’s minimum required version: 0.75.0
What could be so interesting about upgrading Hugo that I decided to write a blog post about it?</description></item><item><title>How to create your custom Link in Bio landing page in Hugo under 10 mins</title><link>https://cupsofcode.com/post/how_to_build_custom_link_in_bio_landing_social_page/</link><pubDate>Mon, 09 Aug 2021 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/how_to_build_custom_link_in_bio_landing_social_page/</guid><description>Link in Bio landing pages became very popular since Instagram limited only single URL per profile info. Luckily, Hugo makes creating those social landing pages a walk in the park. It&amp;rsquo;s so simple, that in just under 10 minutes, you&amp;rsquo;ll have your own custom Link in Bio page up and running.
Table Of Contents: Shortcode in Hugo Shortcode structure and parameters How to access a parameter in shortcode Custom shortcode in Hugo Embed Bio Link from Canva Hugo shortcode template result Gotchas Conclusion Shortcode in Hugo For building custom UI templates (in our case it’s a custom Link in Bio), Hugo provides shortcodes .</description></item><item><title>When and how to use RxJava Disposable</title><link>https://cupsofcode.com/post/when_how_use_rxjava_disposable_serialdisposable_compositedisposable/</link><pubDate>Sun, 20 Jun 2021 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/when_how_use_rxjava_disposable_serialdisposable_compositedisposable/</guid><description>Featured in Android Weekly Issue #472. Table Of Contents: Disposable CompositeDisposable SerialDisposable Conclusion Disposable RxJava 2 introduced the concept of Disposables .
Disposables are streams/links/connections between Observer and Observable. They&amp;rsquo;re meant to give power to the Observers to control Observables. In most cases, the Observer is a UI element, ie; Fragment, Activity, or a corresponding viewmodel of those elements. While Observable represents a data flow where data can be passed from one source to another and get modified along the way if needed.</description></item><item><title>How to display notifications in 2020</title><link>https://cupsofcode.com/post/how-to-display-notification-in-2020/</link><pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/how-to-display-notification-in-2020/</guid><description>These days, most startup apps heavily rely on third-party libraries to send push notifications to a user, thus causing developers to usually not pay too much attention to Android notification changes.
For example, I was working on my side-project which sends a notification once the download is completed (was checking how DownloadManager works).
Back in 2016, you&amp;rsquo;d need to initialize NotificationManager and pending intent if notification contains custom action:
1private lateinit var notificationManager: NotificationManager 2private lateinit var pendingIntent: PendingIntent 3 4override fun onCreate(savedInstanceState: Bundle?</description></item><item><title>Good and sad examples of extension functions</title><link>https://cupsofcode.com/post/good-and-sad-extensions/</link><pubDate>Sun, 29 Dec 2019 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/good-and-sad-extensions/</guid><description>This article is based off my talk at Droidcon SF this year. Kotlin is well-known for null-safety and extension functions features among android developers. Extension functions provide the ability to make new functionality of an extending class without making changes to it. In addition, the new functionality can be declared outside of the extending class. They&amp;rsquo;re also very beneficial when you want to tweak an api that can&amp;rsquo;t be modified.</description></item></channel></rss>