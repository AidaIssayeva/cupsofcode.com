<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Cups of Code</title><link>https://cupsofcode.com/post/</link><description>Recent content in Posts on Cups of Code</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright © 2024, Cups of Code</copyright><lastBuildDate>Tue, 06 Aug 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://cupsofcode.com/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Anyone Interested In Making Organizational Changes Should Read This Book</title><link>https://cupsofcode.com/post/day_15_anyone_interested_in_making_organizational_changes_should_read_this_book/</link><pubDate>Tue, 06 Aug 2024 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/day_15_anyone_interested_in_making_organizational_changes_should_read_this_book/</guid><description>If you are at all interested in making organizational changes, then you need to clear your calendar and read:
&amp;ldquo;Switch: How to Change Things When Change Is Hard&amp;rdquo; by Dan Heath and Chip Heath.
And here&amp;rsquo;s why:
Reason #1: True operational excellence is within the reach of anyone willing to address real issues. You don&amp;rsquo;t have to be in &amp;ldquo;top management&amp;rdquo; to make changes, but you do need to work harder and more explicitly.</description></item><item><title>6 Rules Every Platform Engineer Should Know for Crafting Clear Technical Announcements - Part III</title><link>https://cupsofcode.com/post/day_14_6_rules_every_platform_engineer_should_know_for_crafting_clear_technical_announcements_part_3/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/day_14_6_rules_every_platform_engineer_should_know_for_crafting_clear_technical_announcements_part_3/</guid><description>This article is a Part III of my series on crafting clear technical announcements.
Part I is available here .
Part II is here .
Rule 5: Write Short Sentences Writing short sentences is a powerful technique for enhancing clarity and engagement in technical communications.
Each sentence should adhere to the principle of &amp;ldquo;One Sentence == One Idea&amp;rdquo;, where sentence conveys a single, clear thought without overloading the reader. Reducing the use of subordinate clauses, such as:</description></item><item><title>6 Rules Every Platform Engineer Should Know for Crafting Clear Technical Announcements - Part II</title><link>https://cupsofcode.com/post/day_13_6_rules_every_platform_engineer_should_know_for_crafting_clear_technical_announcements_part_2/</link><pubDate>Wed, 31 Jul 2024 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/day_13_6_rules_every_platform_engineer_should_know_for_crafting_clear_technical_announcements_part_2/</guid><description>This article is a continuation of my series on crafting clear technical announcements.
If you missed Part I, you can catch up here .
Part III is available via this link .
In this installment, we will dive deeper into another 2 essential rules that help platform engineers communicate more effectively with their teams and stakeholders.
Rule 3: Reduce &amp;ldquo;There Is/There Are&amp;rdquo; Usage Developers love using &amp;lsquo;There is/There are&amp;rsquo; in their sentences when referring to issues, learnings, or just about everything.</description></item><item><title>6 Rules Every Platform Engineer Should Know for Crafting Clear Technical Announcements - Part I</title><link>https://cupsofcode.com/post/day_12_6_rules_every_platform_engineer_should_know_for_crafting_clear_technical_announcements_part_1/</link><pubDate>Tue, 30 Jul 2024 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/day_12_6_rules_every_platform_engineer_should_know_for_crafting_clear_technical_announcements_part_1/</guid><description>The way you craft and structure technical announcements is key to capturing and retaining the attention of developers.
Developers are:
natural problem-solvers with a keen ability to see through unclear (aka, BS) information many are non-native English speakers, which makes clear and structured communication even more critical. In these series, you&amp;rsquo;ll learn 6 essential rules to help you craft clear technical announcements. This article is Part I. Part II is available here .</description></item><item><title>One Underrated Tool Tip to Help New Hires Onboard, Ramp up, and Start Excelling Faster in Their New Company</title><link>https://cupsofcode.com/post/day_11_one_underrated_tool_tip_to_help_new_hires_onboard_ramp_up_and_start_exceling_faster_in_their_new_company/</link><pubDate>Mon, 29 Jul 2024 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/day_11_one_underrated_tool_tip_to_help_new_hires_onboard_ramp_up_and_start_exceling_faster_in_their_new_company/</guid><description>Joining a new company is always stressful.
You&amp;rsquo;re faced with the task of learning:
new tools, a new codebase, a new testing infrastructure, new errors, all of which are specific to this company. While onboarding videos and assignments provide a structured introduction, the real process of acclimating to a new environment often extends beyond the official onboarding period. For some, it might even take more than 6 months to feel fully integrated.</description></item><item><title>One Big Mistake I Made When I Was First Getting Started As a Software Engineer</title><link>https://cupsofcode.com/post/day_10_one_big_mistake_i_made_when_i_was_first_getting_started_as_a_software_engineer/</link><pubDate>Fri, 26 Jul 2024 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/day_10_one_big_mistake_i_made_when_i_was_first_getting_started_as_a_software_engineer/</guid><description>Like most beginners, I made a lot of mistakes when I first started working as a software engineer.
But this was the biggest one, by far:
Frequently downplaying my individual contributions Here&amp;rsquo;s what happened:
Whenever colleagues praised my work, my natural response was to shy away from the compliments and attribute the success to the team&amp;rsquo;s collective effort, even though I was the primary driver and deliverer of those projects. This modesty, while fostering a supportive team environment, inadvertently masked my specific contributions from the wider organization.</description></item><item><title>One Effective Strategy for Platform Engineers to Showcase Impact in Promotion Packets</title><link>https://cupsofcode.com/post/day_9_one_effective_strategy_for-platform_engineers_to_showcase_impact_in_promotion_packets/</link><pubDate>Thu, 25 Jul 2024 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/day_9_one_effective_strategy_for-platform_engineers_to_showcase_impact_in_promotion_packets/</guid><description>Promotion reviewers often have limited time to dive deeply into each project in a promotion packet, making it crucial to present information that quickly captures their attention.
The best way to capture their attention is by showing the impact of your work in business terms. This approach involves translating technical achievements into quantifiable business outcomes, such as:
increased revenue, cost savings, improved customer satisfaction. For instance, if a project focused on optimizing and speeding up CI build time, you might calculate the cost savings from the developer hours saved due to the optimization.</description></item><item><title>The One Software App I Can’t Live Without For Handling My Life</title><link>https://cupsofcode.com/post/day_8_the_one_software_app_i_cant_live_without_for_handling_my_life/</link><pubDate>Wed, 24 Jul 2024 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/day_8_the_one_software_app_i_cant_live_without_for_handling_my_life/</guid><description>Today, there is an app, website, or software platform for just about anything (including finding someone to walk your dog).
But when it comes to managing my life, there is one app I can&amp;rsquo;t live without:
Notion And here&amp;rsquo;s why: Reason #1: It has seamless integration with many tools, making it a single source of truth for all action items across different tools such as emails, calendars, documents, and other project tracking apps.</description></item><item><title>One Tip Every Junior Software Engineer Needs to Hear to Succeed</title><link>https://cupsofcode.com/post/day_7_1_tip_i_would_give_someone_who_wants_to_become_a_software_engineer/</link><pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/day_7_1_tip_i_would_give_someone_who_wants_to_become_a_software_engineer/</guid><description>Are you a junior software engineer eager to make your mark?
I have been working as a software engineer for 9 years now. And what I can tell you (from experience) is that in order to succeed in this industry you need not only to write code, cover unhappy paths and edge cases, and decide on trade-offs, and other things.
So, here’s the one crucial tip every junior software engineer needs to hear as you advance in your career:</description></item><item><title>2 Steps For Android Developers To Integrate Dependabot Under 10 Minutes And Automate Dependency Updates</title><link>https://cupsofcode.com/post/day_6_2_steps_for_android_developers_to_integrate_dependabot_under_10_minutes_and_automate_dependency_updates-copy/</link><pubDate>Sun, 21 Jul 2024 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/day_6_2_steps_for_android_developers_to_integrate_dependabot_under_10_minutes_and_automate_dependency_updates-copy/</guid><description>Step 1: Enable Dependabot Security Updates Enabling Dependabot security updates in GitHub allows you to automatically receive patches for vulnerabilities in your project&amp;rsquo;s dependencies.
This feature scans your project repositories for dependencies and checks them against a database of known security vulnerabilities. By doing so, it helps ensure that your codebase remains secure from exploits found in outdated or compromised libraries. The updates are proposed as pull requests, making it easy to review and merge the necessary changes into your main branch.</description></item><item><title>3 Realizations About Task Management To Finish Your To-Do List By The End Of Each Day</title><link>https://cupsofcode.com/post/day_5_3_realizations_about_task_management_to_finish_your_to-do_list_by_the_end_of_each_day/</link><pubDate>Thu, 18 Jul 2024 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/day_5_3_realizations_about_task_management_to_finish_your_to-do_list_by_the_end_of_each_day/</guid><description>Realization 1: Prioritize Tasks Effectively As an adult, the list of things to do never ends.
Something always pops up, needs your urgent attention, or is waiting to be scheduled. To manage these tasks effectively, you need to prioritize them. Often, prioritization is based on importance, urgency (deadlines), or a combination of both.
By prioritizing tasks based on importance and urgency, you can manage your responsibilities better.
Realization 2: Use A Single Tracking System As an adult, you receive action items from various sources—emails, calendars, Jira, documents, spreadsheets, phone calls, and more.</description></item><item><title>How I Got Interested in Building Scalable Systems for my life</title><link>https://cupsofcode.com/post/day_4_how_i_got_interested_in_building_scalable_systems_for_my_life/</link><pubDate>Tue, 16 Jul 2024 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/day_4_how_i_got_interested_in_building_scalable_systems_for_my_life/</guid><description>I wouldn&amp;rsquo;t call myself an expert in productivity or system design.
However, I have spent 5,000 hours reading and learning about productivity and system design. And I have probably spent 3,000 hours practicing and integrating these concepts into my own life.
Here&amp;rsquo;s how I first became interested in building a scalable system for my own life: It was the summer of 2021. I was falling behind on work, duties related to a rental property, personal projects, and meeting with friends and family.</description></item><item><title>The Best Way To Get Started Learning About Android Development</title><link>https://cupsofcode.com/post/day_3_the_best_way_to_get_started_learning_about_android_development/</link><pubDate>Mon, 15 Jul 2024 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/day_3_the_best_way_to_get_started_learning_about_android_development/</guid><description>I love learning about Android Development.
Unfortunately, when I first got interested in Android Development, I had a hard time figuring out where to start.
So, if you are trying to learn more about Android Development, here&amp;rsquo;s the best way to get started: Read This Blog: Developer Guides by Google will give you a lay of the land, and is a helpful way to get your bearings.
Take This Course: Android Kotlin Developer Nanodegree by Udacity is a must-read beginner resource for anyone interested in Android Development.</description></item><item><title>3 Essential skills that define a software engineer</title><link>https://cupsofcode.com/post/day_2_3_essential_skills_that_define_a_software_engineer/</link><pubDate>Sun, 14 Jul 2024 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/day_2_3_essential_skills_that_define_a_software_engineer/</guid><description>Being able to code doesn&amp;rsquo;t make you a software engineer, although coding is a fundamental skill and a prerequisite for becoming one.
Anyone can write code that compiles and runs thanks to a wide range of IDEs (integrated development environments). Here are three important skills that transform you into a software engineer:
Skill #1: Robustness Writing code that works in ideal conditions is one thing, but ensuring that it operates under various edge cases, unexpected inputs, and adverse conditions is another.</description></item><item><title>Day 1: Why I'm Starting To Write Online</title><link>https://cupsofcode.com/post/day_1_why_i_m_starting_to_write_online_ship30for30/</link><pubDate>Tue, 25 Jun 2024 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/day_1_why_i_m_starting_to_write_online_ship30for30/</guid><description>I recently signed up for Dickie Bush &amp;amp; Nicolas Cole&amp;rsquo;s cohort-based course, Ship 30 for 30.
Here are a few reasons why: To unclutter and consolidate my thoughts into cohesive, digestible material. To build a consistent habit of daily writing. To embrace the mindset of publishing something rather than pursuing perfection. Over the next 30 days, I plan on writing about Android Development, Developer Experience, and Productivity.
Join me on this adventure—and let me know if you have any questions along the way!</description></item><item><title>Debugging The Engineering Interview Process</title><link>https://cupsofcode.com/post/talk_presentation_debugging_the_engineering_interview_process/</link><pubDate>Sat, 30 Mar 2024 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/talk_presentation_debugging_the_engineering_interview_process/</guid><description>Table Of Contents: Abstract Presentation Video Abstract In today&amp;rsquo;s competitive job market, mastering the interview process is more crucial than ever. But before mastering the process, you need to identify your flaws, and this is where the debugging technique comes in handy.
This session dives into strategies for dissecting and improving each stage of the interview. You will:
Analyze &amp;lsquo;error logs&amp;rsquo; from interview feedback, even if there is none, &amp;lsquo;Refactor&amp;rsquo; your interview techniques, &amp;lsquo;Optimize&amp;rsquo; your approach to coding challenges and behavioral questions.</description></item><item><title>What’s right is not always right for you</title><link>https://cupsofcode.com/post/whats_right_isnot_always_right_for_you/</link><pubDate>Thu, 02 Nov 2023 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/whats_right_isnot_always_right_for_you/</guid><description>Table Of Contents: Introduction Internal Considerations 1. Your Team’s Knowledge 2. Your Team’s Velocity 3. Your Team’s Desire to Learn 4. Company’s Goals and Timelines External Considerations 1. Framework’s Community and Support 2. Scalability and Performance 3. Integration Capabilities 4. Longevity and Adoption Rate Conclusion Introduction In the fast-paced world of software development, new frameworks emerge seemingly overnight, each promising to be the next big thing.</description></item><item><title>Tracking My Way to Joy: A Year-Long Experiment of Self-Care and Personal Growth</title><link>https://cupsofcode.com/post/tracking_my_way_to_joy_with_notion/</link><pubDate>Wed, 29 Mar 2023 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/tracking_my_way_to_joy_with_notion/</guid><description>Table Of Contents: Prerequisites New Formula Setup 1. Track 2. Plan 3. Reflect Results Final Thoughts Prerequisites A year into COVID lockdown I started noticing how my attention span has gone down dramatically. Often I’d forget why I even stepped into a room or simply what was the next thing I wanted to do. Having these symptoms with a full-time job, side-projects I wanted some traction on, home needs, and rental property requests was not easy.</description></item><item><title>2022 Year in Review</title><link>https://cupsofcode.com/post/2022_review/</link><pubDate>Tue, 10 Jan 2023 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/2022_review/</guid><description>Table Of Contents: Personal Highlights Professional Highlights Challenges The Year in Numbers Content Personal Growth Finances Time wasters In the World Best of the Year Looking Ahead Every year I like to take some time to reflect on the past 12 months. I think about all of my favorite moments and experiences from the year and consider what lessons I’ve learned along the way.</description></item><item><title>Tools to detect and debug recomposition in Jetpack Compose</title><link>https://cupsofcode.com/post/tools_to_detect_and_debug_recomposition_in_jetpack_compose/</link><pubDate>Sun, 28 Aug 2022 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/tools_to_detect_and_debug_recomposition_in_jetpack_compose/</guid><description>Table Of Contents: What is recomposition Why do you need to be concerned about recomposition? Tools to detect recomposition Final Thoughts This post is extracted from my talk “What does recomposition mean to your app” .
What is recomposition Recomposition is the action of forming something again or differently. When the term is used in Jetpack Compose, it means the action of executing the function again.</description></item><item><title>History of hyphenation in Android</title><link>https://cupsofcode.com/post/history_of_hyphenation_in_android/</link><pubDate>Fri, 22 Apr 2022 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/history_of_hyphenation_in_android/</guid><description>Table Of Contents: Before API 23 Introduction of auto-hyphenation at API 23 Change of defaults at API 29 New values at API 33 Now what? Hyphenation in software engineering refers to the process of splitting a word and inserting hyphens in between the syllables of said word, that would otherwise extend beyond a UI element’s end margin. In Android, hyphenation is commonly used in text fields, such as the view-based system’s TextView, EditText or Jetpack Compose’s Text , TextField.</description></item><item><title>Flying Hearts Animation in Jetpack Compose: Quick and Easy Edition</title><link>https://cupsofcode.com/post/implementing_flying_hearts_animation_in_jetpack_compose/</link><pubDate>Tue, 01 Mar 2022 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/implementing_flying_hearts_animation_in_jetpack_compose/</guid><description>Table Of Contents: 1. Drawing the heart shape 2. Introducing the state 3. Adding Visibility animation 4. Adding Position animation 5. Making it multiple 6. Additional animations 7. Clean up 8. What’s next? Featured in OnCreate Digest Issue #98. Featured in Android Weekly Issue #508. Featured in Jetpack Compose Resources Issue #106. I find that the best way to learn anything is by replicating existing features.</description></item><item><title>Jetpack Compose in many shapes and forms</title><link>https://cupsofcode.com/post/jetpack_compose_comes_in_many_shapes_path_forms/</link><pubDate>Mon, 31 Jan 2022 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/jetpack_compose_comes_in_many_shapes_path_forms/</guid><description>Table Of Contents: What is Shape? How to apply Shape? Create a custom shape Final Thoughts Featured in Android Weekly Issue #504. Featured in Jetpack Compose Resources Issue #103. Oftentimes, we get asked to create different custom views and shapes in Android Development. In the old view-based system, we heavily relied on Canvas to create a shape. Luckily, Jetpack Compose introduces new out-of-the-box ways to easily create and modify shapes on the fly.</description></item><item><title>2021 Year in Review</title><link>https://cupsofcode.com/post/2021_review/</link><pubDate>Fri, 31 Dec 2021 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/2021_review/</guid><description>Table Of Contents: Highlights of 2021 Professional Timeline Goals Stats: Everything Else: Annual retrospectives are a great way to look back and analyze all the milestones you’ve overcome, what went wrong, and what areas could use some improvement. For as long as I can remember, I’ve been doing end-of-year recaps where I’d sit down and track the previous 12 month-long journeys on paper for my own eyes only.</description></item><item><title>Integrating a seamless in-app review rating experience in MVI</title><link>https://cupsofcode.com/post/google_play_in-app_review_api_integration_mvi/</link><pubDate>Sat, 30 Oct 2021 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/google_play_in-app_review_api_integration_mvi/</guid><description>Table Of Contents: Implementation Testing Manual Testing Unit Testing Last year, Android introduced a new in-app review API that would allow users to review and rate an app within the app itself. Meaning, developers no longer have to worry about keeping track of how many times the “Rate Us” dialog has been displayed to users and whether the users clicked to go Play Store App.</description></item><item><title>The 5-step guide to become an Android Developer</title><link>https://cupsofcode.com/post/the_five_step_guide_to_become_android_developer/</link><pubDate>Wed, 29 Sep 2021 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/the_five_step_guide_to_become_android_developer/</guid><description>Featured in Android Weekly Issue #487. Featured in Dev Weekly Issue #106. So you want to become an Android Developer and don&amp;rsquo;t know where to start?
Here is my 5-step guide to becoming an Android Developer, jam-packed with action items after each step.
Presentation .
Video: Table Of Contents: 1. Learn a Programming Language 2. Learn Android Platform Fundamentals 3.</description></item><item><title>Story of upgrading Hugo</title><link>https://cupsofcode.com/post/story_of_upgrading_hugo/</link><pubDate>Wed, 08 Sep 2021 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/story_of_upgrading_hugo/</guid><description>After 2 years of using the NewsRoom theme on Hugo, I wanted to switch themes and use something new. With Bootstrap theme as my ideal choice, I decided to nosedive into migrating over until I was faced with my first blocker&amp;hellip; upgrading Hugo to its latest version.
My current Hugo version: 0.61.0
The new theme’s minimum required version: 0.75.0
What could be so interesting about upgrading Hugo that I decided to write a blog post about it?</description></item><item><title>How to create your custom Link in Bio landing page in Hugo under 10 mins</title><link>https://cupsofcode.com/post/how_to_build_custom_link_in_bio_landing_social_page/</link><pubDate>Mon, 09 Aug 2021 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/how_to_build_custom_link_in_bio_landing_social_page/</guid><description>Link in Bio landing pages became very popular since Instagram limited only single URL per profile info. Luckily, Hugo makes creating those social landing pages a walk in the park. It&amp;rsquo;s so simple, that in just under 10 minutes, you&amp;rsquo;ll have your own custom Link in Bio page up and running.
Table Of Contents: Shortcode in Hugo Shortcode structure and parameters How to access a parameter in shortcode Custom shortcode in Hugo Embed Bio Link from Canva Hugo shortcode template result Gotchas Conclusion Shortcode in Hugo For building custom UI templates (in our case it’s a custom Link in Bio), Hugo provides shortcodes .</description></item><item><title>How to get your first interviews as a software engineer</title><link>https://cupsofcode.com/post/how_to_get_first_interviews_as_a_software_engineer/</link><pubDate>Wed, 30 Jun 2021 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/how_to_get_first_interviews_as_a_software_engineer/</guid><description>Finding a job is never easy - finding the first job is a thousand times harder. Getting those automatic rejection emails without having a chance to interview can be an emotional roller-coaster that makes you doubt your skills, abilities, and intentions. This is why striving for visibility is key when trying to land that first job interview.
The greater the number of people who view your resume, the greater the chance of being offered an interview - it&amp;rsquo;s as simple as that.</description></item><item><title>When and how to use RxJava Disposable</title><link>https://cupsofcode.com/post/when_how_use_rxjava_disposable_serialdisposable_compositedisposable/</link><pubDate>Sun, 20 Jun 2021 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/when_how_use_rxjava_disposable_serialdisposable_compositedisposable/</guid><description>Featured in Android Weekly Issue #472. Table Of Contents: Disposable CompositeDisposable SerialDisposable Conclusion Disposable RxJava 2 introduced the concept of Disposables .
Disposables are streams/links/connections between Observer and Observable. They&amp;rsquo;re meant to give power to the Observers to control Observables. In most cases, the Observer is a UI element, ie; Fragment, Activity, or a corresponding viewmodel of those elements. While Observable represents a data flow where data can be passed from one source to another and get modified along the way if needed.</description></item><item><title>How to display notifications in 2020</title><link>https://cupsofcode.com/post/how-to-display-notification-in-2020/</link><pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/how-to-display-notification-in-2020/</guid><description>These days, most startup apps heavily rely on third-party libraries to send push notifications to a user, thus causing developers to usually not pay too much attention to Android notification changes.
For example, I was working on my side-project which sends a notification once the download is completed (was checking how DownloadManager works).
Back in 2016, you&amp;rsquo;d need to initialize NotificationManager and pending intent if notification contains custom action:
1private lateinit var notificationManager: NotificationManager 2private lateinit var pendingIntent: PendingIntent 3 4override fun onCreate(savedInstanceState: Bundle?</description></item><item><title>Recap of 2019: the art of speaking</title><link>https://cupsofcode.com/post/recap-of-2019/</link><pubDate>Tue, 31 Dec 2019 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/recap-of-2019/</guid><description>There is a saying in Russian “как лодку назовешь, так она и поплывет”[a boat sails in accordance with its name]. So January 1st I declared the 2019 to be more bold, tenacious and eager. And oh, has it been! 2019 was a roller-coaster of challenges and rewards.
A few things have shaped this year:
Personally, I hardly ever ask people for anything I want or need. But I can definitely ask someone to do a favor to help family, friends, and colleagues.</description></item><item><title>Good and sad examples of extension functions</title><link>https://cupsofcode.com/post/good-and-sad-extensions/</link><pubDate>Sun, 29 Dec 2019 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/good-and-sad-extensions/</guid><description>This article is based off my talk at Droidcon SF this year. Kotlin is well-known for null-safety and extension functions features among android developers. Extension functions provide the ability to make new functionality of an extending class without making changes to it. In addition, the new functionality can be declared outside of the extending class. They&amp;rsquo;re also very beneficial when you want to tweak an api that can&amp;rsquo;t be modified.</description></item></channel></rss>