<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>early career on Cups of Code</title><link>https://cupsofcode.com/tags/early-career/</link><description>Recent content in early career on Cups of Code</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright © 2024, Cups of Code</copyright><lastBuildDate>Fri, 21 Mar 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://cupsofcode.com/tags/early-career/index.xml" rel="self" type="application/rss+xml"/><item><title>2 Mistakes I Made Early In My Career—And What I Would Have Done Differently</title><link>https://cupsofcode.com/post/day_26_2_mistakes_i_made_early_in_my-careerand_what_i_would_have_done_differently/</link><pubDate>Fri, 21 Mar 2025 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/day_26_2_mistakes_i_made_early_in_my-careerand_what_i_would_have_done_differently/</guid><description>I have been working in Android development for 10 years, and during that time, I&amp;rsquo;ve had the opportunity to accomplish some remarkable things:
Built an award-winning app from the ground up.
Worked at a startup that was successfully acquired.
Contributed to the Android community by speaking and sharing my knowledge.
Developed large-scale applications.
There isn&amp;rsquo;t much I would change about my journey.</description></item><item><title>3 Simple (But Effective) Pieces Of Advice I’d Give Anyone Starting In Software Development</title><link>https://cupsofcode.com/post/day_19_3_simple_but-effective_pieces_of_advice_id_give_anyone_starting_in_software_development/</link><pubDate>Mon, 26 Aug 2024 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/day_19_3_simple_but-effective_pieces_of_advice_id_give_anyone_starting_in_software_development/</guid><description>I have been working in software development for 10 years.
These are the 3 simple (but effective) pieces of advice I&amp;rsquo;d give anyone starting out (or who wants to get started):
Advice #1: Focus on Fundamentals Before diving into the latest frameworks and tools, ensure you have a strong grasp of the fundamental concepts of programming.
Understanding basic principles such as data structures, algorithms, and object-oriented programming will provide a solid foundation and make learning new technologies much easier.</description></item><item><title>One Tip Every Junior Software Engineer Needs to Hear to Succeed</title><link>https://cupsofcode.com/post/day_7_1_tip_i_would_give_someone_who_wants_to_become_a_software_engineer/</link><pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/day_7_1_tip_i_would_give_someone_who_wants_to_become_a_software_engineer/</guid><description>Are you a junior software engineer eager to make your mark?
I have been working as a software engineer for 9 years now. And what I can tell you (from experience) is that in order to succeed in this industry you need not only to write code, cover unhappy paths and edge cases, and decide on trade-offs, and other things.
So, here’s the one crucial tip every junior software engineer needs to hear as you advance in your career:</description></item><item><title>3 Essential skills that define a software engineer</title><link>https://cupsofcode.com/post/day_2_3_essential_skills_that_define_a_software_engineer/</link><pubDate>Sun, 14 Jul 2024 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/day_2_3_essential_skills_that_define_a_software_engineer/</guid><description>Being able to code doesn&amp;rsquo;t make you a software engineer, although coding is a fundamental skill and a prerequisite for becoming one.
Anyone can write code that compiles and runs thanks to a wide range of IDEs (integrated development environments). Here are three important skills that transform you into a software engineer:
Skill #1: Robustness Writing code that works in ideal conditions is one thing, but ensuring that it operates under various edge cases, unexpected inputs, and adverse conditions is another.</description></item><item><title>Debugging The Engineering Interview Process</title><link>https://cupsofcode.com/post/talk_presentation_debugging_the_engineering_interview_process/</link><pubDate>Sat, 30 Mar 2024 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/talk_presentation_debugging_the_engineering_interview_process/</guid><description>Table Of Contents: Abstract Presentation Video Abstract In today&amp;rsquo;s competitive job market, mastering the interview process is more crucial than ever. But before mastering the process, you need to identify your flaws, and this is where the debugging technique comes in handy.
This session dives into strategies for dissecting and improving each stage of the interview. You will:
Analyze &amp;lsquo;error logs&amp;rsquo; from interview feedback, even if there is none, &amp;lsquo;Refactor&amp;rsquo; your interview techniques, &amp;lsquo;Optimize&amp;rsquo; your approach to coding challenges and behavioral questions.</description></item><item><title>The 5-step guide to become an Android Developer</title><link>https://cupsofcode.com/post/the_five_step_guide_to_become_android_developer/</link><pubDate>Wed, 29 Sep 2021 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/the_five_step_guide_to_become_android_developer/</guid><description>Featured in Android Weekly Issue #487. Featured in Dev Weekly Issue #106. So you want to become an Android Developer and don&amp;rsquo;t know where to start?
Here is my 5-step guide to becoming an Android Developer, jam-packed with action items after each step.
Presentation .
Video: Table Of Contents: 1. Learn a Programming Language 2. Learn Android Platform Fundamentals 3.</description></item><item><title>How to get your first interviews as a software engineer</title><link>https://cupsofcode.com/post/how_to_get_first_interviews_as_a_software_engineer/</link><pubDate>Wed, 30 Jun 2021 00:00:00 +0000</pubDate><guid>https://cupsofcode.com/post/how_to_get_first_interviews_as_a_software_engineer/</guid><description>Finding a job is never easy - finding the first job is a thousand times harder. Getting those automatic rejection emails without having a chance to interview can be an emotional roller-coaster that makes you doubt your skills, abilities, and intentions. This is why striving for visibility is key when trying to land that first job interview.
The greater the number of people who view your resume, the greater the chance of being offered an interview - it&amp;rsquo;s as simple as that.</description></item></channel></rss>